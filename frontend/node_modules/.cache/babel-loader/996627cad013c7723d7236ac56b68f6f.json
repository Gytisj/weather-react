{"ast":null,"code":"export const getCitiesWeatherData = async cities => {\n  return Promise.all(cities.map(async cityName => {\n    const result = await fetchCityDataByName(cityName);\n    return result;\n  })).then(result => {\n    return result;\n  });\n};\nexport const fetchCityDataByName = async cityName => {\n  const url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&APPID=bbb8744884025e6b8e1d8c854b9f4566`);\n  const data = await url.json();\n  return data;\n};\nexport const findLoggedInUser = async () => {\n  let token = localStorage.getItem('x-auth');\n\n  try {\n    fetch(`http://localhost:4000/api/v1/user/getSingleUser`, {\n      method: 'GET',\n      headers: {\n        'x-auth': token\n      }\n    }).then(header => {\n      if (!header.ok) {\n        throw Error(header);\n      }\n\n      return header.json();\n    }).then(response => {\n      return response;\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"sources":["/Users/gytexas/Desktop/course-project/course-project/frontend/src/redux/actions/actions.js"],"names":["getCitiesWeatherData","cities","Promise","all","map","cityName","result","fetchCityDataByName","then","url","fetch","data","json","findLoggedInUser","token","localStorage","getItem","method","headers","header","ok","Error","response","e","console","log"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,MAAMC,MAAN,IAAgB;AAClD,SAAOC,OAAO,CAACC,GAAR,CACLF,MAAM,CAACG,GAAP,CAAW,MAAMC,QAAN,IAAkB;AAC3B,UAAMC,MAAM,GAAG,MAAMC,mBAAmB,CAACF,QAAD,CAAxC;AACA,WAAOC,MAAP;AACD,GAHD,CADK,EAKLE,IALK,CAKAF,MAAM,IAAI;AACf,WAAOA,MAAP;AACD,GAPM,CAAP;AAQD,CATM;AAWP,OAAO,MAAMC,mBAAmB,GAAG,MAAMF,QAAN,IAAkB;AACnD,QAAMI,GAAG,GAAG,MAAMC,KAAK,CACpB,qDAAoDL,QAAS,sDADzC,CAAvB;AAGA,QAAMM,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAOD,IAAP;AACD,CANM;AAQP,OAAO,MAAME,gBAAgB,GAAG,YAAY;AAC1C,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAZ;;AACA,MAAI;AACFN,IAAAA,KAAK,CAAE,iDAAF,EAAoD;AACvDO,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACP,kBAAUJ;AADH;AAF8C,KAApD,CAAL,CAMGN,IANH,CAMQW,MAAM,IAAI;AACd,UAAI,CAACA,MAAM,CAACC,EAAZ,EAAgB;AACd,cAAMC,KAAK,CAACF,MAAD,CAAX;AACD;;AACD,aAAOA,MAAM,CAACP,IAAP,EAAP;AACD,KAXH,EAYGJ,IAZH,CAYQc,QAAQ,IAAI;AAChB,aAAOA,QAAP;AACD,KAdH;AAeD,GAhBD,CAgBE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CArBM","sourcesContent":["export const getCitiesWeatherData = async cities => {\n  return Promise.all(\n    cities.map(async cityName => {\n      const result = await fetchCityDataByName(cityName)\n      return result\n    })\n  ).then(result => {\n    return result\n  })\n}\n\nexport const fetchCityDataByName = async cityName => {\n  const url = await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&units=metric&APPID=bbb8744884025e6b8e1d8c854b9f4566`\n  )\n  const data = await url.json()\n  return data\n}\n\nexport const findLoggedInUser = async () => {\n  let token = localStorage.getItem('x-auth')\n  try {\n    fetch(`http://localhost:4000/api/v1/user/getSingleUser`, {\n      method: 'GET',\n      headers: {\n        'x-auth': token\n      }\n    })\n      .then(header => {\n        if (!header.ok) {\n          throw Error(header)\n        }\n        return header.json()\n      })\n      .then(response => {\n        return response\n      })\n  } catch (e) {\n    console.log(e)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}