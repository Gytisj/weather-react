{"ast":null,"code":"var _jsxFileName = \"/Users/gytexas/Desktop/course-project/course-project/frontend/src/pages/Main/main.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as actionTypes from '../../redux/actionTypes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport { Flex } from '../../components/shared/Flex/Flex';\nimport { getCitiesWeatherData } from '../../redux/actions';\nimport { random } from 'faker';\nexport const Main = () => {\n  const dispatch = useDispatch();\n  const [regionState, setRegionState] = useState('');\n  const [regionCapitalState, setRegionCapitalState] = useState([]);\n\n  const inputChangeHandler = event => {\n    setRegionState({ ...regionState,\n      region: event.target.value\n    });\n  };\n\n  const formSubmitHandler = async event => {\n    event.preventDefault();\n    const regionData = await fetch(`https://restcountries.eu/rest/v2/region/${regionState.region}`);\n\n    if (regionData.status === 200) {\n      const newRegionData = await regionData.json();\n      const resultNotChecked = await getCapitalsData(newRegionData);\n      const result = resultNotChecked.filter(city => {\n        if (city.cod !== '404') {\n          return city;\n        }\n      });\n      setRegionCapitalState(...regionCapitalState, result);\n    } else {\n      alert('please enter a valid region etc. Europe, Asia, Africa...');\n    }\n  };\n\n  const getCapitalsData = newRegionData => {\n    const citiesData = newRegionData.map(city => {\n      return city.capital;\n    });\n    return getCitiesWeatherData(citiesData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Flex, {\n    justify: \"center\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    onClick: formSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Search Region\")), /*#__PURE__*/React.createElement(Flex, {\n    justify: \"space-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, regionCapitalState.map(city => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: random.uuid(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: 'http://openweathermap.org/img/w/' + city.weather[0].icon + '.png',\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: 'http://openweathermap.org/img/w/' + city.weather[0].icon + '.png',\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: 'http://openweathermap.org/img/w/' + city.weather[0].icon + '.png',\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, city.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Temperature is: \", city.main.temp, \"\\xB0C \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 52\n      }\n    }), \" Feels Like:\", ' ', city.main.feels_like, \"\\xB0C\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Description: \", city.weather[0].description), /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Add To Favorites!\"));\n  })));\n};","map":{"version":3,"sources":["/Users/gytexas/Desktop/course-project/course-project/frontend/src/pages/Main/main.js"],"names":["React","useState","useDispatch","actionTypes","Button","Flex","getCitiesWeatherData","random","Main","dispatch","regionState","setRegionState","regionCapitalState","setRegionCapitalState","inputChangeHandler","event","region","target","value","formSubmitHandler","preventDefault","regionData","fetch","status","newRegionData","json","resultNotChecked","getCapitalsData","result","filter","city","cod","alert","citiesData","map","capital","uuid","weather","icon","name","main","temp","feels_like","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport * as actionTypes from '../../redux/actionTypes'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Button } from 'reactstrap'\nimport { Flex } from '../../components/shared/Flex/Flex'\nimport { getCitiesWeatherData } from '../../redux/actions'\nimport { random } from 'faker'\n\nexport const Main = () => {\n  const dispatch = useDispatch()\n  const [regionState, setRegionState] = useState('')\n  const [regionCapitalState, setRegionCapitalState] = useState([])\n\n  const inputChangeHandler = event => {\n    setRegionState({\n      ...regionState,\n      region: event.target.value\n    })\n  }\n\n  const formSubmitHandler = async event => {\n    event.preventDefault()\n    const regionData = await fetch(\n      `https://restcountries.eu/rest/v2/region/${regionState.region}`\n    )\n    if (regionData.status === 200) {\n      const newRegionData = await regionData.json()\n      const resultNotChecked = await getCapitalsData(newRegionData)\n      const result = resultNotChecked.filter(city => {\n        if (city.cod !== '404') {\n          return city\n        }\n      })\n      setRegionCapitalState(...regionCapitalState, result)\n    } else {\n      alert('please enter a valid region etc. Europe, Asia, Africa...')\n    }\n  }\n\n  const getCapitalsData = newRegionData => {\n    const citiesData = newRegionData.map(city => {\n      return city.capital\n    })\n    return getCitiesWeatherData(citiesData)\n  }\n\n  return (\n    <>\n      <Flex justify='center' align='center'>\n        <input type='text' onChange={inputChangeHandler}></input>\n        <Button color='secondary' onClick={formSubmitHandler}>\n          Search Region\n        </Button>\n      </Flex>\n      <Flex justify='space-around'>\n        {regionCapitalState.map(city => {\n          return (\n            <div key={random.uuid()}>\n              <img\n                src={\n                  'http://openweathermap.org/img/w/' +\n                  city.weather[0].icon +\n                  '.png'\n                }\n                alt=''\n              />\n              <img\n                src={\n                  'http://openweathermap.org/img/w/' +\n                  city.weather[0].icon +\n                  '.png'\n                }\n                alt=''\n              />\n              <img\n                src={\n                  'http://openweathermap.org/img/w/' +\n                  city.weather[0].icon +\n                  '.png'\n                }\n                alt=''\n              />\n              <p>{city.name}</p>\n              <p>\n                Temperature is: {city.main.temp}°C <br /> Feels Like:{' '}\n                {city.main.feels_like}°C\n              </p>\n              <p>Description: {city.weather[0].description}</p>\n              <Button color='primary'>Add To Favorites!</Button>\n            </div>\n          )\n        })}\n      </Flex>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}