{"ast":null,"code":"var _jsxFileName = \"/Users/gytexas/Desktop/course-project/course-project/frontend/src/pages/Favorites/Favorites.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button } from 'reactstrap';\nimport { Flex } from '../../components/shared/Flex/Flex';\nimport { fetchCityDataByName, addCityForCurrentUser, getAllFavoriteCities } from '../../redux/actions/actions';\nexport const Favorites = () => {\n  const dispatch = useDispatch();\n  const [formState, setFormState] = useState(''); // const [citiesState, setCitiesState] = useState([])\n\n  const inputChangeHandler = event => {\n    setFormState({ ...formState,\n      city: event.target.value\n    });\n  };\n\n  useEffect(() => {\n    getAllFavoriteCities();\n  }, []);\n\n  const formSubmitHandler = async event => {\n    event.preventDefault();\n    const cityData = await fetchCityDataByName(formState.city);\n\n    if (cityData) {\n      addCityForCurrentUser(cityData);\n    } else {\n      alert('add a valid city, this one was not found');\n    }\n  };\n\n  const findCurrentUser = async cityData => {\n    const city = await cityData; // let token = localStorage.getItem('x-auth')\n    // const currentUser = await fetch(\n    //   `http://localhost:4000/api/v1/user/getSingleUser`,\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'x-auth': token\n    //     }\n    //   }\n    // )\n    //   .then(async header => {\n    //     if (!header.ok) {\n    //       throw Error(header)\n    //     }\n    //     return await header.json()\n    //   })\n    //   .then(async response => {\n    //     addCityForCurrentUser(response, city)\n    //   })\n    //   .catch(e => {\n    //     console.log(e)\n    //   })\n  }; // const addToCartHandler = () => {\n  //   const productIndex = cart.findIndex(cartItem => cartItem.id === id)\n  //   if (productIndex >= 0) {\n  //     // Sitas if'as praeina kai produktas jau yra krepselyje\n  //     const newCart = [...cart]\n  //     newCart[productIndex].cartQuantity += 1\n  //     dispatch({\n  //       type: actionTypes.REPLACE_CART,\n  //       newCart\n  //     })\n  //   }\n  //   if (productIndex === -1) {\n  //     dispatch({\n  //       type: actionTypes.ADD_TO_CART,\n  //       newCartItem: { ...product, cartQuantity: 1 }\n  //     })\n  //   }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    justify: \"center\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: inputChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"secondary\",\n    onClick: formSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Add city to favorites\")));\n};","map":{"version":3,"sources":["/Users/gytexas/Desktop/course-project/course-project/frontend/src/pages/Favorites/Favorites.jsx"],"names":["React","useState","useEffect","useDispatch","Button","Flex","fetchCityDataByName","addCityForCurrentUser","getAllFavoriteCities","Favorites","dispatch","formState","setFormState","inputChangeHandler","event","city","target","value","formSubmitHandler","preventDefault","cityData","alert","findCurrentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,sCAAP;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,IAAT,QAAqB,mCAArB;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,oBAHF,QAIO,6BAJP;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAF6B,CAG7B;;AAEA,QAAMY,kBAAkB,GAAGC,KAAK,IAAI;AAClCF,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEXI,MAAAA,IAAI,EAAED,KAAK,CAACE,MAAN,CAAaC;AAFR,KAAD,CAAZ;AAID,GALD;;AAOAf,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,iBAAiB,GAAG,MAAMJ,KAAN,IAAe;AACvCA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAMC,QAAQ,GAAG,MAAMd,mBAAmB,CAACK,SAAS,CAACI,IAAX,CAA1C;;AACA,QAAIK,QAAJ,EAAc;AACZb,MAAAA,qBAAqB,CAACa,QAAD,CAArB;AACD,KAFD,MAEO;AACLC,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACD;AACF,GARD;;AAUA,QAAMC,eAAe,GAAG,MAAMF,QAAN,IAAkB;AACxC,UAAML,IAAI,GAAG,MAAMK,QAAnB,CADwC,CAExC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAzBD,CA1B6B,CAoD7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,QAAd;AAAuB,IAAA,KAAK,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEP,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,WAA5B;AAAwC,IAAA,OAAO,EAAEK,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CADF,CADF;AAUD,CAjFM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Button } from 'reactstrap'\nimport { Flex } from '../../components/shared/Flex/Flex'\nimport {\n  fetchCityDataByName,\n  addCityForCurrentUser,\n  getAllFavoriteCities\n} from '../../redux/actions/actions'\n\nexport const Favorites = () => {\n  const dispatch = useDispatch()\n  const [formState, setFormState] = useState('')\n  // const [citiesState, setCitiesState] = useState([])\n\n  const inputChangeHandler = event => {\n    setFormState({\n      ...formState,\n      city: event.target.value\n    })\n  }\n\n  useEffect(() => {\n    getAllFavoriteCities()\n  }, [])\n\n  const formSubmitHandler = async event => {\n    event.preventDefault()\n    const cityData = await fetchCityDataByName(formState.city)\n    if (cityData) {\n      addCityForCurrentUser(cityData)\n    } else {\n      alert('add a valid city, this one was not found')\n    }\n  }\n\n  const findCurrentUser = async cityData => {\n    const city = await cityData\n    // let token = localStorage.getItem('x-auth')\n\n    // const currentUser = await fetch(\n    //   `http://localhost:4000/api/v1/user/getSingleUser`,\n    //   {\n    //     method: 'GET',\n    //     headers: {\n    //       'x-auth': token\n    //     }\n    //   }\n    // )\n    //   .then(async header => {\n    //     if (!header.ok) {\n    //       throw Error(header)\n    //     }\n    //     return await header.json()\n    //   })\n    //   .then(async response => {\n    //     addCityForCurrentUser(response, city)\n    //   })\n    //   .catch(e => {\n    //     console.log(e)\n    //   })\n  }\n  // const addToCartHandler = () => {\n  //   const productIndex = cart.findIndex(cartItem => cartItem.id === id)\n  //   if (productIndex >= 0) {\n  //     // Sitas if'as praeina kai produktas jau yra krepselyje\n  //     const newCart = [...cart]\n  //     newCart[productIndex].cartQuantity += 1\n  //     dispatch({\n  //       type: actionTypes.REPLACE_CART,\n  //       newCart\n  //     })\n  //   }\n  //   if (productIndex === -1) {\n  //     dispatch({\n  //       type: actionTypes.ADD_TO_CART,\n  //       newCartItem: { ...product, cartQuantity: 1 }\n  //     })\n  //   }\n  // }\n\n  return (\n    <Flex justify='center' align='center'>\n      <form>\n        <input type='text' onChange={inputChangeHandler}></input>\n        <Button type='submit' color='secondary' onClick={formSubmitHandler}>\n          Add city to favorites\n        </Button>\n      </form>\n    </Flex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}